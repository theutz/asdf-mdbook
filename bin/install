#!/usr/bin/env bash

set -euo pipefail

if [ -n "${DEBUG_MDBOOK_INSTALL:-}" ]; then
	set -x
fi

github_coordinates="rust-lang/mdBook"
binary_name="mdbook"

install_tool() {
	local version="$2"
	local install_path="$3"
	local tmp_download_dir="$4"

	local bin_install_path="$install_path/bin"
	local binary_path="$bin_install_path/$binary_name"

	local download_file
	local download_url
	local download_path

	download_url=$(get_download_url "$version")
	download_file="$(get_release_filename "$version")"
	download_path="$tmp_download_dir/$download_file"

	echo "Downloading [${binary_name}] from ${download_url} to ${download_path}"
	curl -Lo "$download_path" "$download_url"

	echo "Extracting archive"
	tar -C "$tmp_download_dir" -xzf "$download_path"

	echo "Creating bin directory"
	mkdir -p "${bin_install_path}"

	echo "Cleaning previous binaries"
	rm -f "$binary_path" 2>/dev/null || true

	echo "Copying binary"
	cp "${tmp_download_dir}/${binary_name}" "${binary_path}"
	chmod +x "${binary_path}"
}

get_platform() {
	if [ "$(uname)" = "Linux" ]; then
		echo "$(uname -m)-unknown-linux-gnu"
	elif [ "$(uname)" = "Darwin" ]; then
		echo "x86_64-apple-darwin"
	else
		echo "Unknown or unsupported machine name '$(uname)'" >&2
		exit 1
	fi
}

get_release_filename() {
	local version="$1"

	echo "mdbook-v${version}-$(get_platform).tar.gz"
}

get_download_url() {
	local version="$1"

	echo "https://github.com/${github_coordinates}/releases/download/v${version}/$(get_release_filename "$version")"
}

tmp_download_dir="$(mktemp -d -t 'asdf_XXXXXXXX')"
trap 'rm -rf "${tmp_download_dir}"' EXIT
install_tool "$ASDF_INSTALL_TYPE" "$ASDF_INSTALL_VERSION" "$ASDF_INSTALL_PATH" "$tmp_download_dir"
